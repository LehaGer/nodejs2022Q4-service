openapi: 3.0.0
paths:
  /user:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags:
        - user
    get:
      operationId: UsersController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - user
  /user/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: ''
      tags:
        - user
    put:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      tags:
        - user
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: ''
      tags:
        - user
  /artist:
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
      tags:
        - artist
    get:
      operationId: ArtistsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - artist
  /artist/{id}:
    get:
      operationId: ArtistsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: ''
      tags:
        - artist
    put:
      operationId: ArtistsController_update
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
      tags:
        - artist
    delete:
      operationId: ArtistsController_remove
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: ''
      tags:
        - artist
  /track:
    post:
      operationId: TracksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
      tags:
        - track
    get:
      operationId: TracksController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - track
  /track/{id}:
    get:
      operationId: TracksController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: ''
      tags:
        - track
    put:
      operationId: TracksController_update
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
      tags:
        - track
    delete:
      operationId: TracksController_remove
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: ''
      tags:
        - track
  /album:
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
      tags:
        - album
    get:
      operationId: AlbumsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - album
  /album/{id}:
    get:
      operationId: AlbumsController_findOne
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: ''
      tags:
        - album
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
      tags:
        - album
    delete:
      operationId: AlbumsController_remove
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: ''
      tags:
        - album
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - favorites
  /favs/{target}/{id}:
    post:
      operationId: FavoritesController_create
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
        - name: target
          required: true
          in: path
          example: track
          schema:
            $ref: '#/components/schemas/FavoriteType'
      responses:
        '201':
          description: ''
      tags:
        - favorites
    delete:
      operationId: FavoritesController_remove
      parameters:
        - name: id
          required: true
          in: path
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          schema:
            format: uuid
            type: string
        - name: target
          required: true
          in: path
          example: track
          schema:
            $ref: '#/components/schemas/FavoriteType'
      responses:
        '204':
          description: ''
      tags:
        - favorites
info:
  title: REST Service
  description: The REST Service API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: some login
          example: Me
        password:
          type: string
          description: some password
          example: '1234'
      required:
        - login
        - password
    UpdateUserDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: previous password
          example: '1234'
        newPassword:
          type: string
          description: new password
          example: '12345678'
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: some artists name
          example: Matallica
        grammy:
          type: boolean
          description: does have a grammy
          example: false
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: some artists name
          example: Queen
        grammy:
          type: boolean
          description: does have a grammy
          example: true
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: tracks name
          example: The Unforgiven
        duration:
          type: number
          description: tracks duration
          example: 2.5
        artistId:
          type: string
          nullable: true
          description: corresponding artist's id
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          format: uuid
        albumId:
          type: string
          nullable: true
          description: corresponding album's id
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          format: uuid
      required:
        - name
        - duration
        - artistId
        - albumId
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: tracks name
          example: Nothing Else Matters
        duration:
          type: number
          description: tracks duration
          example: 2.5
        artistId:
          type: string
          nullable: true
          description: corresponding artist's id
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          format: uuid
        albumId:
          type: string
          nullable: true
          description: corresponding album's id
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          format: uuid
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: album's name
          example: some name
        year:
          type: number
          description: issue's year
          example: 2023
        artistId:
          type: string
          nullable: true
          description: issue's year
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          format: uuid
      required:
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: album's name
          example: Muster of Puppets
        year:
          type: number
          description: issue's year
          example: 2023
        artistId:
          type: string
          nullable: true
          description: issue's year
          example: 924f2a6c-6595-46ff-ab65-1136d235d465
          format: uuid
    FavoriteType:
      type: string
      enum:
        - artist
        - album
        - track
